{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categorias","type","value","onChange","target","getGif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFecthGifts","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEPC,mBAAS,IAFF,mBAErCC,EAFqC,KAEzBC,EAFyB,KAqB5C,OAEQ,sBAAMC,SAfK,SAACC,GAEZA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAO,IAEzBR,GAAe,SAAAS,GAAU,OAAGP,GAAH,mBAAiBO,OAC1CN,EAAc,MAQlB,SACI,uBACQO,KAAK,OACLC,MAAOT,EACPU,SAvBM,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPjBG,EAAM,uCAAC,WAAMC,GAAN,uBAAAC,EAAA,6DAEXC,EAFW,iDAEqCC,UAAUH,GAF/C,+DAGEI,MAAMF,GAHR,cAGXG,EAHW,gBAIIA,EAAKC,OAJT,uBAIVC,EAJU,EAIVA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EAEvB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QAXxB,kBAeVM,GAfU,4CAAD,sDCCPO,EAAc,SAAC,GAAoB,IAAnBJ,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAGlC,OADAc,QAAQC,IAAIN,EAAGC,EAAMV,GAEjB,sBAAKgB,UAAU,0CAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCHHS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAa,IAAD,EAEXd,mBAAS,CAC3BqB,KAAK,GACLe,SAAQ,IAJqB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAwBrC,OAjBAC,qBAAU,WAEN1B,EAAOC,GACN0B,MAAK,SAAAhB,GACMc,EAAS,CACDjB,KAAMG,EACNY,SAAQ,SAM9B,CAACtB,IAKIuB,EDrBsBI,CAAc3B,GAA/Ba,EAFuB,EAE5BN,KAAYe,EAFgB,EAEhBA,QAInB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDlB,IAClDsB,GAAW,mBAAGJ,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAGQL,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEhBpBiB,EAAe,WAAM,MAGM1C,mBAAS,CAAC,cAHhB,mBAGvBQ,EAHuB,KAGXT,EAHW,KAM9B,OAEI,qCACQ,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQS,EAAWe,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MCfjC6B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.dc43d52d.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport Proptypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue ] = useState('');\r\n\r\n    const handleInputChange = (e)=>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit=(e)=>{\r\n\r\n            e.preventDefault();\r\n\r\n            if( inputValue.trim().length>2){\r\n                \r\n                setCategories( categorias=>[inputValue,...categorias]);\r\n                setInputValue('');\r\n\r\n            }\r\n\r\n\r\n        }\r\n    return (\r\n        \r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                        type=\"text\"\r\n                        value={inputValue}\r\n                        onChange={ handleInputChange}\r\n                \r\n                /> \r\n            </form>\r\n        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories: Proptypes.func.isRequired\r\n}","\r\n export const getGif=async(category)=>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=c9SBtdFZct070Wq7c7dlC5JJ5nDOI10i`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img=>{\r\n\r\n        return {\r\n            id: img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n  \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n\r\n    console.log(id,title,url);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn \">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFecthGifts } from '../hooks/useFetchGif';\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images,loading}= useFecthGifts(category);\r\n\r\n\r\n   \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3> \r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n            <div className='card-grid'>\r\n                \r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                        key={img.id}\r\n                        {...img}\r\n                        />\r\n                    ))\r\n                }\r\n                \r\n            \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGif } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFecthGifts= (category) =>{\r\n\r\n    const [state, setstate] = useState({\r\n            data:[],\r\n            loading:true\r\n    });\r\n\r\n    useEffect(()=>{\r\n\r\n        getGif(category)\r\n        .then(img => {                    \r\n                    setstate({\r\n                            data: img,\r\n                            loading:false\r\n                        });                \r\n\r\n        })\r\n\r\n\r\n    },[category])\r\n\r\n    \r\n\r\n\r\n    return state; //{data:[],loading:true};\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categorias = ['One punch','Samurai X', 'Dragon ball'] \r\n    const [categorias, setCategories] = useState(['One punch']);\r\n\r\n    \r\n    return (\r\n\r\n        <>\r\n                <h2>GifExpertApp</h2>\r\n                <AddCategory setCategories={setCategories}/>\r\n                <hr/>\r\n\r\n                <ol>\r\n                    {\r\n                        categorias.map(category => (\r\n                            <GifGrid \r\n                            key={category}\r\n                            category={category} />\r\n                        ))\r\n                        \r\n                    }\r\n\r\n                </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// GifExpertApp\n"],"sourceRoot":""}